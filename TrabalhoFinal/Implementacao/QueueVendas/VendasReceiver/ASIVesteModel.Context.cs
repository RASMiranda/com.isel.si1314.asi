//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VendasReceiver
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ASIVesteEntities : DbContext
    {
        public ASIVesteEntities()
            : base("name=ASIVesteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Encomenda> Encomendas { get; set; }
        public DbSet<Fornecedor> Fornecedors { get; set; }
        public DbSet<Produto> Produtos { get; set; }
        public DbSet<Venda> Vendas { get; set; }
        public DbSet<VendaProduto> VendaProdutos { get; set; }
    
        public virtual int sp_realizarEncomenda(string codigoProduto, Nullable<int> encomendaRecebida, Nullable<int> qtdEncomendada, Nullable<int> vendaId, ObjectParameter encomendaId)
        {
            var codigoProdutoParameter = codigoProduto != null ?
                new ObjectParameter("CodigoProduto", codigoProduto) :
                new ObjectParameter("CodigoProduto", typeof(string));
    
            var encomendaRecebidaParameter = encomendaRecebida.HasValue ?
                new ObjectParameter("EncomendaRecebida", encomendaRecebida) :
                new ObjectParameter("EncomendaRecebida", typeof(int));
    
            var qtdEncomendadaParameter = qtdEncomendada.HasValue ?
                new ObjectParameter("QtdEncomendada", qtdEncomendada) :
                new ObjectParameter("QtdEncomendada", typeof(int));
    
            var vendaIdParameter = vendaId.HasValue ?
                new ObjectParameter("VendaId", vendaId) :
                new ObjectParameter("VendaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_realizarEncomenda", codigoProdutoParameter, encomendaRecebidaParameter, qtdEncomendadaParameter, vendaIdParameter, encomendaId);
        }
    
        public virtual int sp_realizarVenda(string nomeCliente, string moradaCliente, string codigoProduto, Nullable<int> qtd)
        {
            var nomeClienteParameter = nomeCliente != null ?
                new ObjectParameter("NomeCliente", nomeCliente) :
                new ObjectParameter("NomeCliente", typeof(string));
    
            var moradaClienteParameter = moradaCliente != null ?
                new ObjectParameter("MoradaCliente", moradaCliente) :
                new ObjectParameter("MoradaCliente", typeof(string));
    
            var codigoProdutoParameter = codigoProduto != null ?
                new ObjectParameter("CodigoProduto", codigoProduto) :
                new ObjectParameter("CodigoProduto", typeof(string));
    
            var qtdParameter = qtd.HasValue ?
                new ObjectParameter("Qtd", qtd) :
                new ObjectParameter("Qtd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_realizarVenda", nomeClienteParameter, moradaClienteParameter, codigoProdutoParameter, qtdParameter);
        }
    
        public virtual int sp_receberEncomenda(Nullable<int> encomendaId)
        {
            var encomendaIdParameter = encomendaId.HasValue ?
                new ObjectParameter("EncomendaId", encomendaId) :
                new ObjectParameter("EncomendaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_receberEncomenda", encomendaIdParameter);
        }
    }
}
