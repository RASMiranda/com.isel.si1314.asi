//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ex2Cliente.a.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Conta", Namespace="MeuNamespace")]
    [System.SerializableAttribute()]
    public partial class Conta : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int NumeroField;
        
        private float SaldoField;
        
        private string TitularField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Numero {
            get {
                return this.NumeroField;
            }
            set {
                if ((this.NumeroField.Equals(value) != true)) {
                    this.NumeroField = value;
                    this.RaisePropertyChanged("Numero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public float Saldo {
            get {
                return this.SaldoField;
            }
            set {
                if ((this.SaldoField.Equals(value) != true)) {
                    this.SaldoField = value;
                    this.RaisePropertyChanged("Saldo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Titular {
            get {
                return this.TitularField;
            }
            set {
                if ((object.ReferenceEquals(this.TitularField, value) != true)) {
                    this.TitularField = value;
                    this.RaisePropertyChanged("Titular");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IServico", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IServico {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServico/obterConta", ReplyAction="http://tempuri.org/IServico/obterContaResponse")]
        Ex2Cliente.a.ServiceReference1.Conta obterConta(int numero);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServico/inserirConta", ReplyAction="http://tempuri.org/IServico/inserirContaResponse")]
        void inserirConta(Ex2Cliente.a.ServiceReference1.Conta c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServico/alterarConta", ReplyAction="http://tempuri.org/IServico/alterarContaResponse")]
        void alterarConta(Ex2Cliente.a.ServiceReference1.Conta c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServico/Transferir", ReplyAction="http://tempuri.org/IServico/TransferirResponse")]
        void Transferir(int c1, int c2, float montante);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicoChannel : Ex2Cliente.a.ServiceReference1.IServico, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicoClient : System.ServiceModel.ClientBase<Ex2Cliente.a.ServiceReference1.IServico>, Ex2Cliente.a.ServiceReference1.IServico {
        
        public ServicoClient() {
        }
        
        public ServicoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Ex2Cliente.a.ServiceReference1.Conta obterConta(int numero) {
            return base.Channel.obterConta(numero);
        }
        
        public void inserirConta(Ex2Cliente.a.ServiceReference1.Conta c) {
            base.Channel.inserirConta(c);
        }
        
        public void alterarConta(Ex2Cliente.a.ServiceReference1.Conta c) {
            base.Channel.alterarConta(c);
        }
        
        public void Transferir(int c1, int c2, float montante) {
            base.Channel.Transferir(c1, c2, montante);
        }
    }
}
